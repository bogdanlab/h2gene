[{"path":"/articles/ld.html","id":"simulation","dir":"Articles","previous_headings":"","what":"Simulation","title":"Example with large LD","text":"","code":"library(ggplot2) theme_set(theme_classic()) library(susieR) library(h2geneR) library(MASS) library(patchwork) ##  ## Attaching package: 'patchwork' ## The following object is masked from 'package:MASS': ##  ##     area library(dplyr) ##  ## Attaching package: 'dplyr' ## The following object is masked from 'package:MASS': ##  ##     select ## The following objects are masked from 'package:stats': ##  ##     filter, lag ## The following objects are masked from 'package:base': ##  ##     intersect, setdiff, setequal, union # Load the data # ld <- npyLoad(\"../data/ld.npy\") # beta <- npyLoad(\"../data/beta.npy\") # gene_mask <- as.logical(npyLoad(\"../data/gene_mask.npy\")) # save(ld, beta, gene_mask, file=\"../data/toy.RData\")  data(\"toy\")  sim_i <- 3 hsq <- 0.005 n_indiv <- 50000 n_snp <- nrow(ld) # simulate from beta and ld set.seed(1) XtX <- ld * n_indiv sim <- simulate_gwas(hsq=hsq, beta=beta[, sim_i], XtX=XtX, n_indiv=n_indiv) susie_fit <- susie_suff_stat(bhat=sim$beta_hat, shat=sim$se_hat, R=ld, n=n_indiv) zsc <- sim$beta_hat / sim$se_hat posterior_samples <- susie_get_posterior_samples(susie_fit, num_samples=500) gene_est <- h2gene(susie_fit, ld, as.matrix(gene_mask, ncol=1))$hsq  df <- data.frame(pos=1:length(zsc),                  pval=-log10(2 * pnorm(-abs(zsc))),                  causal=beta[, sim_i] != 0)  p0 <- ggplot(df, aes(x=pos, y=pval, color=causal, size=factor(causal), alpha=factor(causal))) +         geom_point() +         scale_size_discrete(range=c(0.5, 0.5)) +         ylab('-log10(p)') +         scale_alpha_discrete(range=c(0.5, 0.5)) +         scale_colour_manual(values=c(\"black\", \"red\")) +         theme_bw() +          theme(legend.position=\"none\") +         geom_vline(xintercept=900, linetype=\"dashed\",                  color = \"green4\", size=0.5) +         geom_vline(xintercept=1500, linetype=\"dashed\",                  color = \"green4\", size=0.5) +         ggtitle(\"Simulated GWAS\") ## Warning: Using size for a discrete variable is not advised. ## Warning: Using alpha for a discrete variable is not advised. print(p0)"},{"path":"/articles/ld.html","id":"plotting-results","dir":"Articles","previous_headings":"","what":"Plotting results","title":"Example with large LD","text":"example caption","code":"n_frame <- 30 df_plot <- c()  for (sample_i in 1:n_frame) {   sample_b <- posterior_samples$b[, sample_i]   sample_bhat <- (ld %*% sample_b)      df <- data.frame(     pos = 1:length(sample_bhat),     betahat = sample_bhat,     beta = sample_b,     sample_i = sample_i   )   df_plot <- rbind(df_plot, df) }  filenames <- paste0(\"frame\", 1 : n_frame, \".jpg\") for (frame_i in 1:n_frame) {   p1 <-     ggplot(df_plot %>% filter(sample_i == frame_i),            aes(x = pos, y = betahat)) +     geom_point(size = 0.2, alpha = 0.3) +     ylab(expression(paste(V, beta))) +     ylim(-0.1, 0.1) +     theme(legend.position = \"none\") +     geom_vline(       xintercept = 900,       linetype = \"dashed\",       color = \"green4\",       size = 0.5     ) +     geom_vline(       xintercept = 1500,       linetype = \"dashed\",       color = \"green4\",       size = 0.5     ) +     theme(       axis.text.x = element_blank(),       axis.title.x = element_blank(),       plot.title = element_text(size = 8)     ) +     geom_hline(yintercept = 0) +     ggtitle(\"Induced expected marginal effects\")         p2 <-     ggplot(df_plot %>% filter(sample_i == frame_i), aes(x = pos, y = beta)) +     geom_segment(aes(xend = pos, yend = 0), size = 0.5) +     geom_vline(       xintercept = 900,       linetype = \"dashed\",       color = \"green4\",       size = 0.5     ) +     geom_vline(       xintercept = 1500,       linetype = \"dashed\",       color = \"green4\",       size = 0.5     ) +     ylab(expression(beta)) +     ylim(-0.1, 0.1) +     geom_rect(       xmin = 900,       xmax = 1500,       ymin = -0.11,       ymax = -0.095,       fill = 'darkred'     ) +     geom_hline(yintercept = 0) +     ggtitle(\"Sampled causal effects\") +     theme(plot.title = element_text(size = 8))      p3 <- ggplot(data.frame(est = gene_est), aes(x = 1, y = est)) +     geom_violin() +     stat_summary(       fun = mean,       geom = \"point\",       shape = 23,       size = 2     ) +     ylab(\"Posterior of gene h2\") +     geom_point(data = data.frame(est = gene_est[seq(1, frame_i)]),                size = 1,                alpha = 0.5) +     theme(       axis.title.x = element_blank(),       axis.text.x = element_blank(),       axis.ticks.x = element_blank()     )      p <- ((p2 / p1) | p3) + plot_layout(ncol = 2, widths = c(2, 1))   ggsave(filenames[frame_i], plot=p, width=6, height=5, dpi=200) } system(\"convert -delay 50 frame*jpg frame.gif\") unlink(\"*.jpg\") knitr::include_graphics(\"frame.gif\")"},{"path":"/articles/toy.html","id":"toy-example","dir":"Articles","previous_headings":"","what":"Toy example","title":"Toy example","text":"","code":"library(susieR) library(h2geneR) library(matrixStats)  # a minimal example from susieR website set.seed(1) n    <- 1000 p    <- 500 beta <- rep(0, p) beta[c(1, 2, 300, 400)] <- 1 X   <- matrix(rnorm(n * p), nrow = n, ncol = p) y   <- X %*% beta + rnorm(n) susie_fit <- susie(X, y, L = 10)  # calculate LD matrix ld <- cov(X)  # build annotation matrix annot <- matrix(F, nrow = p, ncol = 2) colnames(annot) <- c(\"gene1\", \"gene2\") annot[c(1, 2), \"gene1\"] <- T annot[c(300), \"gene2\"] <- T  # run h2gene res <- h2gene(susie_fit, ld = ld, annot = annot)  # summarize h2gene results print(\"Mean of heritability estimates across posterior samples\") ## [1] \"Mean of heritability estimates across posterior samples\" print(colMeans(res$hsq) / c(var(y))) ##     gene1     gene2  ## 0.4124906 0.1867927 print(\"Standard deviations\") ## [1] \"Standard deviations\" print(colSds(res$hsq) / c(var(y))) ## [1] 0.01698157 0.01135150"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Burch Kathryn. Author. Hou Kangcheng. Author, maintainer. Ding Yi. Author. Pasaniuc Bogdan. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Burch, K. S., Hou, K., Ding, Y., Wang, Y., Gazal, S., Shi, H., & Pasaniuc, B. (2021). Partitioning gene-level contributions complex-trait heritability allele frequency identifies disease-relevant genes. bioRxiv.","code":"@Article{,   title = {Partitioning gene-level contributions to complex-trait heritability by allele frequency identifies disease-relevant genes},   author = {Kathryn S. Burch and Kangcheng Hou and Yi Ding and Yifei Wang and Steven Gazal and Huwenbo Shi and Bogdan Pasaniuc},   journal = {bioRxiv},   year = {2021},   url = {https://doi.org/10.1101/2021.08.17.456722}, }"},{"path":"/index.html","id":"h2gene","dir":"","previous_headings":"","what":"Gene-level heritability estimation","title":"Gene-level heritability estimation","text":"h2gene method partitioning gene-level contributions complex-trait heritability allele frequency (binary annotations). Check bioRxiv manuscript Burch, Hou et al. “Partitioning gene-level contributions complex-trait heritability allele frequency identifies disease-relevant genes”.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Gene-level heritability estimation","text":"","code":"# install.packages(\"remotes\") remotes::install_github(\"bogdanlab/h2gene\")"},{"path":"/index.html","id":"quick-start","dir":"","previous_headings":"","what":"Quick start","title":"Gene-level heritability estimation","text":"","code":"library(susieR) library(h2geneR) library(matrixStats)  # a minimal example from susieR website set.seed(1) n    <- 1000 p    <- 500 beta <- rep(0,p) beta[c(1,2,300,400)] <- 1 X   <- matrix(rnorm(n*p),nrow=n,ncol=p) y   <- X %*% beta + rnorm(n) susie_fit <- susie(X,y,L=10)  # calculate LD matrix ld <- cov(X)  # build annotation matrix annot <- matrix(F, nrow=p, ncol=2) colnames(annot) <- c(\"gene1\", \"gene2\") annot[c(1, 2), \"gene1\"] <- T annot[c(300), \"gene2\"] <- T  # run h2gene res <- h2gene(susie_fit, ld=ld, annot=annot)  # summarize h2gene results print(\"Mean of heritability estimates across posterior samples:\") print(colMeans(res$hsq))  print(\"Standard deviations:\") print(colSds(res$hsq))"},{"path":"/index.html","id":"paper-experiments","dir":"","previous_headings":"","what":"Paper experiments","title":"Gene-level heritability estimation","text":"See paper/ directory code replicate experiment results.","code":""},{"path":"/reference/h2gene.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate partitioned gene-level heritability — h2gene","title":"Estimate partitioned gene-level heritability — h2gene","text":"function estimate partitioned gene-level heritability","code":""},{"path":"/reference/h2gene.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate partitioned gene-level heritability — h2gene","text":"","code":"h2gene(susie_fit, ld, annot, n_sample = 500)"},{"path":"/reference/h2gene.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate partitioned gene-level heritability — h2gene","text":"susie_fit susie fit object obtained susie susie_suff_stat ld n_snp n_snp linkage disequilibrium matrix match one used construct susie_fit annot n_snp n_annot binary matrix denoting n_sample Number posterior samples simulate estimation. Default 500.","code":""},{"path":"/reference/h2gene.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate partitioned gene-level heritability — h2gene","text":"list following elements: hsq n_sample posterior samples heritability ncausal n_sample posterior samples number causals","code":""},{"path":"/reference/simulate_gwas.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate GWAS from either individual level genotype or LD matrix — simulate_gwas","title":"Simulate GWAS from either individual level genotype or LD matrix — simulate_gwas","text":"function simulate GWAS marginal regression coefficients approximated standard error genotype \\(\\mathbf{X}\\) phenotype \\(\\mathbf{y}\\) simulated standard linear model \\(\\mathbf{y} = \\mathbf{X} \\mathbf{b} + \\mathbf{e}\\). supports two modes: (1) simulation individual level genotype \\(\\mathbf{X}\\). (2) simulation moment matrix XtX: \\(\\mathbf{X}^T \\mathbf{X}\\). details, want obtain \\(\\widehat{b}_j=(\\mathbf{X}_j^{\\top}\\mathbf{X}_j)^{-1}(\\mathbf{X}_j^{\\top}\\mathbf{y})\\) \\(\\widehat{\\text{s.e.}}(\\widehat{b}_j) = \\widehat{\\sigma_j^2}(\\mathbf{X}_j^{\\top}\\mathbf{X}_j)^{-1}\\). Variance explained SNP typically assumed small. Therefore \\(\\widehat{\\sigma_j^2}\\) can approximated \\(\\widehat{\\sigma_j^2}=\\text{Var}[\\mathbf{y}]\\). consistently normalize \\(\\mathbf{y}\\) \\(\\text{Var}[\\mathbf{y}]=1\\). individual-level data \\(\\mathbf{X}\\), can calculate \\(\\widehat{b}_j\\) \\(\\widehat{\\text{s.e.}}[\\widehat{b}_j]\\) \\((\\mathbf{X}_j^{\\top}\\mathbf{X}_j)^{-1}\\) \\((\\mathbf{X}_j^{\\top}\\mathbf{y})\\). summary statistics data \\(\\mathbf{X}^T \\mathbf{X}\\), $$\\widehat{b}_j= (\\mathbf{X}_j^{\\top}\\mathbf{X}_j)^{-1}(\\mathbf{X}_j^{\\top}\\mathbf{y})= (\\mathbf{X}_j^{\\top}\\mathbf{X}_j)^{-1}[\\mathbf{X}_j^{\\top} (\\mathbf{X}\\mathbf{b}+\\mathbf{e})] $$ Therefore, can simulate \\(\\widehat{\\mathbf{b}}\\) first sample multivariate normal mean \\(\\mathbf{X}^\\top \\mathbf{X} \\mathbf{b}\\) variance \\(\\mathbf{X}^\\top \\mathbf{X} \\sigma_e^2\\), multiplied \\((\\mathbf{X}_j^{\\top}\\mathbf{X}_j)^{-1}\\) jth entry.","code":""},{"path":"/reference/simulate_gwas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate GWAS from either individual level genotype or LD matrix — simulate_gwas","text":"","code":"simulate_gwas(hsq, beta, XtX = NULL, n_indiv = NULL, X = NULL)"},{"path":"/reference/simulate_gwas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate GWAS from either individual level genotype or LD matrix — simulate_gwas","text":"hsq Heritability explained genotype \\(\\frac{\\text{Var}[X\\beta]}{\\text{Var}[y]}\\) beta n_snp n_sim simulated effect sizes n_indiv Number individuals n_indiv LD matrix X n_indiv n_snp genotype matrix ld n_snp n_snp linkage disequilibrium matrix","code":""},{"path":"/reference/simulate_gwas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate GWAS from either individual level genotype or LD matrix — simulate_gwas","text":"list following elements: beta_hat Simulated marginal effects   beta_hat[, ] corresponds ith simulation e Simulated environmental noise","code":""},{"path":"/reference/toy.html","id":null,"dir":"Reference","previous_headings":"","what":"Toy data for illustration purposes. — toy","title":"Toy data for illustration purposes. — toy","text":"data set contains LD (correlation) matrix 2,000 SNPs, simulated effect sizes specified gene region. LD matrix constructed random region 300K UK Biobank individuals imputed SNP density. Therefore, correlation SNPs. effect sizes simulated 5 2,000 variables non-zero simulation replicate choice causal SNPs uniformly random.","code":""},{"path":"/reference/toy.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Toy data for illustration purposes. — toy","text":"toy list following elements: ld P P correlation matrix (1 diagonal elements). beta Simulated effect sizes. gene_mask Specified gene region (901th - 1500th SNP), choice   gene region artificial.","code":""},{"path":"/reference/toy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Toy data for illustration purposes. — toy","text":"","code":"data(toy)"}]
